// Generated by BUCKLESCRIPT VERSION 1.7.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array                 = require("bs-platform/lib/js/array.js");
var Curry                   = require("bs-platform/lib/js/curry.js");
var Js_exn                  = require("bs-platform/lib/js/js_exn.js");
var Js_json                 = require("bs-platform/lib/js/js_json.js");
var Util_kernel             = require("./util_kernel.js");
var Util_option             = require("./util_option.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function Json_make(M) {
  var parse = function (s) {
    try {
      return Curry._1(M[/* from_json */0], JSON.parse(s));
    }
    catch (exn){
      return /* None */0;
    }
  };
  var stringify = function (v) {
    return JSON.stringify(Curry._1(M[/* to_json */1], v));
  };
  return /* module */[
          /* from_json */M[0],
          /* to_json */M[1],
          /* parse */parse,
          /* stringify */stringify
        ];
}

function to_json(prim) {
  return prim;
}

function parse(s) {
  try {
    return Js_json.decodeString(JSON.parse(s));
  }
  catch (exn){
    return /* None */0;
  }
}

function stringify(v) {
  return JSON.stringify(v);
}

var $$String = /* module */[
  /* from_json */Js_json.decodeString,
  /* to_json */to_json,
  /* parse */parse,
  /* stringify */stringify
];

function from_json(n) {
  return Curry._2(Util_option.map, (function (prim) {
                return prim | 0;
              }), Js_json.decodeNumber(n));
}

function to_json$1(n) {
  return n;
}

function parse$1(s) {
  try {
    return from_json(JSON.parse(s));
  }
  catch (exn){
    return /* None */0;
  }
}

function stringify$1(v) {
  return JSON.stringify(v);
}

var Int = /* module */[
  /* from_json */from_json,
  /* to_json */to_json$1,
  /* parse */parse$1,
  /* stringify */stringify$1
];

function to_json$2(prim) {
  return prim;
}

function parse$2(s) {
  try {
    return Js_json.decodeNumber(JSON.parse(s));
  }
  catch (exn){
    return /* None */0;
  }
}

function stringify$2(v) {
  return JSON.stringify(v);
}

var Float = /* module */[
  /* from_json */Js_json.decodeNumber,
  /* to_json */to_json$2,
  /* parse */parse$2,
  /* stringify */stringify$2
];

function list_of_jarray(f, a) {
  return Util_option.$great$great$eq(Curry._2(Util_option.map, $$Array.to_list, Js_json.decodeArray(a)), Curry._1(Util_option.mapM, f));
}

function array_of_jarray(f, a) {
  try {
    var arr = Js_json.decodeArray(a);
    return /* Some */[$$Array.map((function (param) {
                    return Util_kernel.compose(Util_option.unwrap_exn, f, param);
                  }), Util_option.unwrap_exn(arr))];
  }
  catch (raw_exn){
    var exn = Js_exn.internalToOCamlException(raw_exn);
    if (exn[0] === Caml_builtin_exceptions.invalid_argument) {
      return /* None */0;
    } else {
      throw exn;
    }
  }
}

function jarray_of_list(f, l) {
  return $$Array.of_list(Util_kernel.map(f, l));
}

var jarray_of_array = $$Array.map;

function List(M) {
  var from_json = function (a) {
    return list_of_jarray(M[/* from_json */0], a);
  };
  var to_json = function (l) {
    return $$Array.of_list(Util_kernel.map(M[/* to_json */1], l));
  };
  return /* module */[
          /* from_json */from_json,
          /* to_json */to_json
        ];
}

function $$Array$1(M) {
  var from_json = function (a) {
    return array_of_jarray(M[/* from_json */0], a);
  };
  var to_json = function (arr) {
    return $$Array.map(M[/* to_json */1], arr);
  };
  return /* module */[
          /* from_json */from_json,
          /* to_json */to_json
        ];
}

exports.Json_make       = Json_make;
exports.$$String        = $$String;
exports.Int             = Int;
exports.Float           = Float;
exports.list_of_jarray  = list_of_jarray;
exports.array_of_jarray = array_of_jarray;
exports.jarray_of_list  = jarray_of_list;
exports.jarray_of_array = jarray_of_array;
exports.List            = List;
exports.$$Array         = $$Array$1;
/* Util_option Not a pure module */
