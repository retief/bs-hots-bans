// Generated by BUCKLESCRIPT VERSION 1.7.5, PLEASE EDIT WITH CARE
'use strict';

var Util                 = require("../common/util/util.js");
var Curry                = require("bs-platform/lib/js/curry.js");
var Util_json            = require("../common/util/util_json.js");
var Util_option          = require("../common/util/util_option.js");
var Util_promise         = require("../common/util/util_promise.js");
var RequestPromiseNative = require("request-promise-native");

function make(name, group) {
  return /* record */[
          /* name */name,
          /* group */group
        ];
}

function from_json(j) {
  return Util_option.$great$great$eq(Util_json.jdict_of_json(j), (function (dict) {
                return Curry._2(Util_option.$less$neg$great, Curry._2(Util_option.$less$$great, make, Curry._2(Util_json.$$String[/* @. */5], dict, "PrimaryName")), Curry._2(Util_json.$$String[/* @. */5], dict, "Group"));
              }));
}

function to_json(param) {
  return Util_json.jobj_of_list(/* :: */[
              /* tuple */[
                "PrimaryName",
                Curry._1(Util_json.$$String[/* to_json */1], param[/* name */0])
              ],
              /* :: */[
                /* tuple */[
                  "Group",
                  Curry._1(Util_json.$$String[/* to_json */1], param[/* group */1])
                ],
                /* [] */0
              ]
            ]);
}

var Hero = Util_json.Extend(/* module */[
      /* from_json */from_json,
      /* to_json */to_json
    ]);

var HeroList = Util_json.$$Array([
      Hero[0],
      Hero[1]
    ]);

Curry._2(Util_promise.$less$$great, Util.debug, Curry._2(Util_promise.$less$$great, HeroList[/* parse */2], RequestPromiseNative.call("", "https://api.hotslogs.com/Public/Data/Heroes")));

exports.Hero     = Hero;
exports.HeroList = HeroList;
/* Hero Not a pure module */
